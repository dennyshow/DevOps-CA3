trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  javaVersion: '17'

stages:
# Stage 1: Build
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: BuildJob
    displayName: 'Build Job'
    steps:
    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '$(javaVersion)'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'

    - task: Gradle@3
      displayName: 'Gradle Build'
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '$(javaVersion)'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'clean build'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Build Artifacts'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'build-outputs'

# Stage 2: Unit Tests
- stage: Test
  displayName: 'Test Stage'
  dependsOn: Build
  jobs:
  - job: UnitTests
    displayName: 'Run Unit Tests'
    steps:
    - task: DownloadBuildArtifacts@0
      displayName: 'Download Build Artifacts'
      inputs:
        buildType: 'current'
        artifactName: 'build-outputs'
        downloadPath: '$(System.DefaultWorkingDirectory)'

    - task: Gradle@3
      displayName: 'Run Unit Tests'
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '$(javaVersion)'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'clean test'

# Stage 3: Code Quality
- stage: CodeAnalysis
  displayName: 'Code Quality Stage'
  dependsOn: Build
  jobs:
  - job: CodeAnalysisJob
    displayName: 'SonarCloud Analysis'
    steps:
    - task: DownloadBuildArtifacts@0
      displayName: 'Download Build Artifacts'
      inputs:
        buildType: 'current'
        artifactName: 'build-outputs'
        downloadPath: '$(System.DefaultWorkingDirectory)'

    - task: SonarCloudPrepare@3
      displayName: 'Prepare SonarCloud Analysis'
      inputs:
        SonarCloud: 'SonarConnection'
        organization: 'x00078774'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'YourProjectKey'
        cliProjectName: 'YourProjectName'
        cliSources: '.'

    - script: |
        ./gradlew sonarqube \
          -Dsonar.projectKey=YourProjectKey \
          -Dsonar.organization=x00078774 \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=$(SonarCloudToken)
      displayName: 'Run SonarCloud Analysis'

    - task: SonarCloudPublish@3
      displayName: 'Publish SonarCloud Results'

# Stage 4: Deployment
- stage: Deployment
  displayName: 'Deployment Stage'
  dependsOn: Test
  condition: succeeded()
  jobs:
  - job: DeployJob
    displayName: 'Deploy to Environment'
    steps:
    - task: DownloadBuildArtifacts@0
      displayName: 'Download Build Artifacts'
      inputs:
        buildType: 'current'
        artifactName: 'build-outputs'
        downloadPath: '$(System.DefaultWorkingDirectory)'

    - script: |
        echo "Deploying the application..."
        # Add your deployment script/commands here
        echo "Deployment completed."
      displayName: 'Deploy Application'
